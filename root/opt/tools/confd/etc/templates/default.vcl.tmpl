vcl 4.0;
import directors;


{{- range $linked_service, $link_name := ls "/self/services/links" -}}
	{{- $link := (split $linked_service "/") -}}
	{{- $ips := lookupIP $link_name -}}

	{{- range $ip := $ips -}}
		backend {{- printf "backend-%s-%s" $link_name $ip -}} {
			.host = ip("backend", "");
			.port = "80";
		}
	{{- end -}}

{{- end -}}

sub vcl_init {
    new vdir = directors.round_robin();

{{- range $linked_service, $link_name := ls "/self/services/links" -}}
	{{- $link := (split $linked_service "/") -}}
	{{- $ips := (lookupIP $link_name) -}}

		vdir.add_backend({{- printf "backend-%s-%s" $link_name $ip -}}));
	{{- end -}}

{{- end -}}
}

# Customised 'vcl_hit'.
sub vcl_hit {
	return (deliver);
}

sub vcl_recv {
	
    # send all traffic to the bar director:
    set req.backend_hint = vdir.backend();
    unset req.http.Cache-Control;
}

sub vcl_backend_response {
    # Happens after we have read the response headers from the backend.
    #
    # Here you clean the response headers, removing silly Set-Cookie headers
    # and other mistakes your backend does.
}

sub vcl_deliver {
    # Happens when we have all the pieces we need, and are about to send the
    # response to the client.
    #
    # You can do accounting or modifying the final object here.

    if (obj.hits > 0) {
		 set resp.http.X-Cache = "HIT";
	 } else {
		 set resp.http.X-Cache = "MISS";
	 }
}

sub vcl_hash {
    hash_data(req.http.method);
}
